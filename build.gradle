buildscript {
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0'
    }
}

plugins {
    id "application"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

apply plugin: 'com.google.cloud.tools.appengine'

version "1-2"
group "ocado.queue.poller"

ext {
    appEngineProjectVersion = project.version
    appEngineProjectId = 'ocado-poller'

    micronautVersion = '2.0.0.M1'
    assertJVersion = '3.15.0'
    slf4JVersion = '2.0.0-alpha1'
    mockitoVersion = '3.3.3'
}

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
}

dependencies {

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "javax.annotation:javax.annotation-api"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation "org.slf4j:slf4j-log4j12:$slf4JVersion"

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"


}

test.classpath += configurations.developmentOnly
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

mainClassName = "com.richrocksmy.ocadoqueuepoller.Application"

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

appengine {
    stage.artifact = "${buildDir}/libs/${project.name}-${project.version}-all.jar"
    deploy {
        projectId = appEngineProjectId
        version = appEngineProjectVersion
    }
}
